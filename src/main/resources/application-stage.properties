spring.cloud.stream.function.definition= fileEventDataConsumer
spring.cloud.stream.bindings.fileEventDataConsumer-in-0.destination=${KAFKA_CONSUMER_TOPIC}
spring.cloud.stream.kafka.bindings.fileEventDataConsumer-in-0.consumer.autoCommitOffset=false
spring.cloud.stream.kafka.bindings.recordEventConsumer-in-0.consumer.configuration.session.timeout.ms=${SESSION_TIMEOUT:120000}
spring.cloud.stream.kafka.bindings.recordEventConsumer-in-0.consumer.configuration.max.poll.interval.ms=${MAX_POLL_TIMEOUT:300000}
spring.cloud.stream.kafka.bindings.recordEventConsumer-in-0.consumer.configuration.heartbeat.interval.ms=${HEARTBEAT_INTERVAL:6000}
spring.cloud.stream.kafka.bindings.recordEventConsumer-in-0.consumer.configuration.request.timeout.ms=${REQUEST_TIMEOUT:60000}
spring.cloud.stream.kafka.bindings.recordEventConsumer-in-0.consumer.configuration.default.api.timeout.ms=${DEFAULT_API_TIMEOUT:900000}
spring.cloud.stream.kafka.bindings.recordEventConsumer-in-0.consumer.configuration.max.poll.records=${MAX_POLL_RECORDS:500}
spring.cloud.stream.default.group=${CONSUMER_GROUP}

spring.cloud.stream.source=supplierProcessor
spring.cloud.stream.bindings.supplierProcessor-out-0.destination=${KAFKA_PRODUCER_TOPIC}

database.connection.params=?targetServerType=master&sslmode=prefer&currentSchema=${DB_SCHEMA_NAME:emmastg}
spring.datasource.database=${PSQL_DATABASE:postgres}
spring.datasource.driverClassName=org.postgresql.Driver
spring.datasource.hosts=${DB_HOSTS}
spring.datasource.password=${DB_USER_PASSWORD:hybFde5}
spring.datasource.url=jdbc:postgresql://${spring.datasource.hosts}/${spring.datasource.database}${database.connection.params}
spring.datasource.username=${PSQL_USER:emmastg}

spring.jpa.hibernate.ddl-auto=${SPRING_JPA_HIBERNATE_DLL_AUTO:validate}
spring.jpa.properties.hibernate.c3p0.acquireIncrement=5
spring.jpa.properties.hibernate.c3p0.dataSourceName=c3p0dataSource
spring.jpa.properties.hibernate.c3p0.driverClass=${spring.datasource.driverClassName}
spring.jpa.properties.hibernate.c3p0.idleConnectionTestPeriod=${c3p0_idleConnectionTestPeriod:60}
spring.jpa.properties.hibernate.c3p0.initialPoolSize=${C3P0_initialPoolSize:1}
spring.jpa.properties.hibernate.c3p0.jdbcUrl=${spring.datasource.url}
spring.jpa.properties.hibernate.c3p0.maxConnectionAge=1200
spring.jpa.properties.hibernate.c3p0.maxIdleTime=${c3p0_maxIdleTime:600}
spring.jpa.properties.hibernate.c3p0.maxIdleTimeExcessConnections=${c3p0_maxIdleTimeExcessConnections:300}
spring.jpa.properties.hibernate.c3p0.maxPoolSize=${C3P0_maxPoolSize:100}
spring.jpa.properties.hibernate.c3p0.minPoolSize=${C3P0_minPoolSize:1}
spring.jpa.properties.hibernate.c3p0.numHelperThreads=128

spring.jpa.properties.hibernate.connection.driver_class=${spring.datasource.driverClassName}
spring.jpa.properties.hibernate.connection.isolation=1
spring.jpa.properties.hibernate.connection.password=${spring.datasource.password}
spring.jpa.properties.hibernate.connection.provider_class=org.hibernate.connection.C3P0ConnectionProvider
spring.jpa.properties.hibernate.connection.url=${spring.datasource.url}
spring.jpa.properties.hibernate.connection.username=${spring.datasource.username}

spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.properties.hibernate.jdbc.batch_size=${JDBC_BATCH_SIZE:500}
spring.jpa.show-sql=${SPRING_JPA_SHOW_SQL:false}
spring.jpa.properties.hibernate.generate_statistics=false
spring.jpa.properties.hibernate.show_sql=false

management.endpoints.web.exposure.include=info, health, env, metrics
management.endpoints.web.base-path=/actuator
management.endpoint.metrics.enabled=true
management.endpoint.health.show-details=always
database.user=dwmp-memberCard

spring.cloud.stream.kafka.binder.configuration.security.protocol=SSL
spring.cloud.stream.kafka.binder.configuration.ssl.truststore.location=${KAFKA_EMAIL_TRUSTSTORE:certs/kafka/stage/truststore.jks}
spring.cloud.stream.kafka.binder.configuration.ssl.truststore.password=${KAFKA_TRUSTSTORE_PASS}
spring.cloud.stream.kafka.binder.configuration.ssl.truststore.type=JKS
spring.cloud.stream.kafka.binder.configuration.ssl.keystore.location=${KAFKA_EMAIL_KEYSTORE:certs/kafka/stage/keystore.jks}
spring.cloud.stream.kafka.binder.configuration.ssl.keystore.password=${KAFKA_KEYSTORE_PASS}
spring.cloud.stream.kafka.binder.configuration.ssl.key.store.type=JKS
spring.cloud.stream.bindings.kafka.binder.configuration.ssl.enabled.protocols=TLSv1.2,TLSv1.1,TLSv1
spring.cloud.stream.kafka.binder.brokers=kaas-test-ctc-a.optum.com:443
spring.cloud.stream.kafka.binder.autoCreateTopics=false

serviceEndpoint= s3api-core.uhc.com
accessKeyId= g5QbR3Qa33cankaHE7sY
secretKeyId= ${SECRET_KEY:0LU2Yknu8pPxM0wa88F3TYPaVyqU1wvcG8h7xKJF}
bucketName= emmacaadev
folderName= CAA/
backupfolder=CAA_backup/
recordInfoFile=caa_recordinfofile

dw.email.emailFrom=${MEMBER_SENDER_ADDRESS:noreply@uhc.com}
dw.email.template_path=${EMAIL_TEMPLATE_PATH:/templates/emailTemplate.vm}
dw.email.emailTo=${EMAIL_TO:najook_patel@optum.com}
spring.mail.host=${MAIL_HOST:ctc-smtp-relay-ocp-nonprod.optum.com}
spring.mail.props.mail.debug=false

logging.splunk.url=https://npe-dmz-hec-splunk.optum.com
logging.splunk.token=${SPLUNK_TOKEN}

dividedby=${DIVIDED_BY:10}

